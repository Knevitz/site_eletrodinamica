{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documentos/TCC/eletrodinamica.loja/src/components/AtualizarCatalogo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AtualizarCatalogo = () => {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (pdfFile) {\n      // Lógica futura para enviar o arquivo ao backend\n      console.log(\"Catálogo enviado:\", pdfFile.name);\n      alert(\"Catálogo atualizado com sucesso!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-3\",\n      children: \"Atualizar cat\\xE1logo de controladores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formFile\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Escolher novo PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          accept: \"application/pdf\",\n          onChange: e => setPdfFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(AtualizarCatalogo, \"SeXhGGYWjJO1liTlK0g63Pi9VL8=\");\n_c = AtualizarCatalogo;\nexport default AtualizarCatalogo;\nvar _c;\n$RefreshReg$(_c, \"AtualizarCatalogo\");","map":{"version":3,"names":["React","useState","Button","Form","jsxDEV","_jsxDEV","AtualizarCatalogo","_s","pdfFile","setPdfFile","handleSubmit","e","preventDefault","console","log","name","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","accept","onChange","target","files","variant","_c","$RefreshReg$"],"sources":["/home/pedro/Documentos/TCC/eletrodinamica.loja/src/components/AtualizarCatalogo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst AtualizarCatalogo = () => {\n  const [pdfFile, setPdfFile] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (pdfFile) {\n      // Lógica futura para enviar o arquivo ao backend\n      console.log(\"Catálogo enviado:\", pdfFile.name);\n      alert(\"Catálogo atualizado com sucesso!\");\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-3\">\n        Atualizar catálogo de controladores\n      </h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          <Form.Label>Escolher novo PDF</Form.Label>\n          <Form.Control\n            type=\"file\"\n            accept=\"application/pdf\"\n            onChange={(e) => setPdfFile(e.target.files[0])}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Enviar\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AtualizarCatalogo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,OAAO,EAAE;MACX;MACAK,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,OAAO,CAACO,IAAI,CAAC;MAC9CC,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAIa,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EAAC;IAE3C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLjB,OAAA,CAACF,IAAI;MAACoB,QAAQ,EAAEb,YAAa;MAAAO,QAAA,gBAC3BZ,OAAA,CAACF,IAAI,CAACqB,KAAK;QAACC,SAAS,EAAC,UAAU;QAACP,SAAS,EAAC,MAAM;QAAAD,QAAA,gBAC/CZ,OAAA,CAACF,IAAI,CAACuB,KAAK;UAAAT,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC1CjB,OAAA,CAACF,IAAI,CAACwB,OAAO;UACXC,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,iBAAiB;UACxBC,QAAQ,EAAGnB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbjB,OAAA,CAACH,MAAM;QAAC+B,OAAO,EAAC,SAAS;QAACL,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAExC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACf,EAAA,CAhCID,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAkCvB,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}